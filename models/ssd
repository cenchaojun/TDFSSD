/home/cen/anaconda3/envs/open-mmlab/bin/python3.7 /home/cen/PycharmProjects/TDFSSD/models/ssd_vgg.py
SSD(
  (base): ModuleList(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace=True)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace=True)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace=True)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace=True)
    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(inplace=True)
    (16): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=True)
    (17): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): ReLU(inplace=True)
    (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(inplace=True)
    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(inplace=True)
    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (25): ReLU(inplace=True)
    (26): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): ReLU(inplace=True)
    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(inplace=True)
    (30): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
    (31): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
    (32): ReLU(inplace=True)
    (33): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
    (34): ReLU(inplace=True)
  )
  (extras): ModuleList(
    (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))
    (3): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (4): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
    (5): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (6): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
    (7): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (8): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
    (9): Conv2d(128, 256, kernel_size=(4, 4), stride=(1, 1), padding=(1, 1))
  )
  (L2Norm): L2Norm()
  (loc): ModuleList(
    (0): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(1024, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): Conv2d(256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (conf): ModuleList(
    (0): Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(1024, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (softmax): Softmax(dim=None)
)
Warning: module L2Norm is treated as a zero-op.
Warning: module Softmax is treated as a zero-op.
Warning: module SSD is treated as a zero-op.
/home/cen/PycharmProjects/TDFSSD/layers/modules/l2norm.py:17: UserWarning: nn.init.constant is now deprecated in favor of nn.init.constant_.
  init.constant(self.weight,self.gamma)
SSD(
  24.441 M, 99.998% Params, 87.946 GMac, 100.000% MACs,
  (base): ModuleList(
    20.484 M, 83.807% Params, 86.262 GMac, 98.085% MACs,
    (0): Conv2d(0.002 M, 0.007% Params, 0.47 GMac, 0.534% MACs, 3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(0.0 M, 0.000% Params, 0.017 GMac, 0.019% MACs, inplace=True)
    (2): Conv2d(0.037 M, 0.151% Params, 9.68 GMac, 11.007% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(0.0 M, 0.000% Params, 0.017 GMac, 0.019% MACs, inplace=True)
    (4): MaxPool2d(0.0 M, 0.000% Params, 0.017 GMac, 0.019% MACs, kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(0.074 M, 0.302% Params, 4.84 GMac, 5.504% MACs, 64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(0.0 M, 0.000% Params, 0.008 GMac, 0.010% MACs, inplace=True)
    (7): Conv2d(0.148 M, 0.604% Params, 9.672 GMac, 10.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(0.0 M, 0.000% Params, 0.008 GMac, 0.010% MACs, inplace=True)
    (9): MaxPool2d(0.0 M, 0.000% Params, 0.008 GMac, 0.010% MACs, kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(0.295 M, 1.208% Params, 4.836 GMac, 5.499% MACs, 128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(0.0 M, 0.000% Params, 0.004 GMac, 0.005% MACs, inplace=True)
    (12): Conv2d(0.59 M, 2.414% Params, 9.668 GMac, 10.993% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(0.0 M, 0.000% Params, 0.004 GMac, 0.005% MACs, inplace=True)
    (14): Conv2d(0.59 M, 2.414% Params, 9.668 GMac, 10.993% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU(0.0 M, 0.000% Params, 0.004 GMac, 0.005% MACs, inplace=True)
    (16): MaxPool2d(0.0 M, 0.000% Params, 0.004 GMac, 0.005% MACs, kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=True)
    (17): Conv2d(1.18 M, 4.828% Params, 4.834 GMac, 5.496% MACs, 256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): ReLU(0.0 M, 0.000% Params, 0.002 GMac, 0.002% MACs, inplace=True)
    (19): Conv2d(2.36 M, 9.655% Params, 9.666 GMac, 10.991% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (20): ReLU(0.0 M, 0.000% Params, 0.002 GMac, 0.002% MACs, inplace=True)
    (21): Conv2d(2.36 M, 9.655% Params, 9.666 GMac, 10.991% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): ReLU(0.0 M, 0.000% Params, 0.002 GMac, 0.002% MACs, inplace=True)
    (23): MaxPool2d(0.0 M, 0.000% Params, 0.002 GMac, 0.002% MACs, kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(2.36 M, 9.655% Params, 2.416 GMac, 2.748% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (25): ReLU(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, inplace=True)
    (26): Conv2d(2.36 M, 9.655% Params, 2.416 GMac, 2.748% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): ReLU(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, inplace=True)
    (28): Conv2d(2.36 M, 9.655% Params, 2.416 GMac, 2.748% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (29): ReLU(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, inplace=True)
    (30): MaxPool2d(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
    (31): Conv2d(4.72 M, 19.310% Params, 4.833 GMac, 5.495% MACs, 512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
    (32): ReLU(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, inplace=True)
    (33): Conv2d(1.05 M, 4.294% Params, 1.075 GMac, 1.222% MACs, 1024, 1024, kernel_size=(1, 1), stride=(1, 1))
    (34): ReLU(0.0 M, 0.000% Params, 0.001 GMac, 0.001% MACs, inplace=True)
  )
  (extras): ModuleList(
    3.017 M, 12.344% Params, 0.616 GMac, 0.700% MACs,
    (0): Conv2d(0.262 M, 1.074% Params, 0.269 GMac, 0.306% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (1): Conv2d(1.18 M, 4.828% Params, 0.302 GMac, 0.344% MACs, 256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (2): Conv2d(0.066 M, 0.269% Params, 0.017 GMac, 0.019% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1))
    (3): Conv2d(0.295 M, 1.208% Params, 0.019 GMac, 0.021% MACs, 128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (4): Conv2d(0.033 M, 0.135% Params, 0.002 GMac, 0.002% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1))
    (5): Conv2d(0.295 M, 1.208% Params, 0.005 GMac, 0.005% MACs, 128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (6): Conv2d(0.033 M, 0.135% Params, 0.001 GMac, 0.001% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1))
    (7): Conv2d(0.295 M, 1.208% Params, 0.001 GMac, 0.001% MACs, 128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (8): Conv2d(0.033 M, 0.135% Params, 0.0 GMac, 0.000% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1))
    (9): Conv2d(0.525 M, 2.146% Params, 0.001 GMac, 0.001% MACs, 128, 256, kernel_size=(4, 4), stride=(1, 1), padding=(1, 1))
  )
  (L2Norm): L2Norm(0.0 M, 0.000% Params, 0.0 GMac, 0.000% MACs, )
  (loc): ModuleList(
    0.627 M, 2.565% Params, 0.713 GMac, 0.810% MACs,
    (0): Conv2d(0.111 M, 0.453% Params, 0.453 GMac, 0.515% MACs, 512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(0.221 M, 0.905% Params, 0.227 GMac, 0.258% MACs, 1024, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(0.111 M, 0.453% Params, 0.028 GMac, 0.032% MACs, 512, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(0.055 M, 0.226% Params, 0.004 GMac, 0.004% MACs, 256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(0.055 M, 0.226% Params, 0.001 GMac, 0.001% MACs, 256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(0.037 M, 0.151% Params, 0.0 GMac, 0.000% MACs, 256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): Conv2d(0.037 M, 0.151% Params, 0.0 GMac, 0.000% MACs, 256, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (conf): ModuleList(
    0.313 M, 1.282% Params, 0.356 GMac, 0.405% MACs,
    (0): Conv2d(0.055 M, 0.226% Params, 0.227 GMac, 0.258% MACs, 512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(0.111 M, 0.453% Params, 0.113 GMac, 0.129% MACs, 1024, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(0.055 M, 0.226% Params, 0.014 GMac, 0.016% MACs, 512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(0.028 M, 0.113% Params, 0.002 GMac, 0.002% MACs, 256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): Conv2d(0.028 M, 0.113% Params, 0.0 GMac, 0.001% MACs, 256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): Conv2d(0.018 M, 0.075% Params, 0.0 GMac, 0.000% MACs, 256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): Conv2d(0.018 M, 0.075% Params, 0.0 GMac, 0.000% MACs, 256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (softmax): Softmax(0.0 M, 0.000% Params, 0.0 GMac, 0.000% MACs, dim=None)
)
MACs: 87.95 GMac
Params: 24.44 M